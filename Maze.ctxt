#BlueJ class context
comment0.params=
comment0.target=Maze()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Maze\r\n
comment1.params=squares\ rows\ cols
comment1.target=Maze(Square[][],\ int,\ int)
comment10.params=e
comment10.target=void\ setExplorer(Explorer)
comment11.params=key
comment11.target=void\ explorerMove(int)
comment12.params=
comment12.target=void\ randMove()
comment13.params=
comment13.target=int\ gameStatus()
comment13.text=\r\n\ Returns\ the\ status\ of\ the\ game.\r\n\r\n\ If\ all\ treasures\ have\ been\ found,\ return\ EXPLORER_WIN.\r\n\ If\ not,\ check\ each\ maze\ occupant,\ if\ it\ is\ a\ Monster\ and\r\n\ \ \ \ it\ is\ in\ the\ same\ location\ as\ the\ Explorer,\ return\r\n\ \ \ \ MONSTER_WIN.\ \ Note\ that\ you\ can\ use\ \=\=\ to\ check\ locations,\ do\ you\ know\ why?\r\n\ Otherwise,\ return\ ACTIVE.\r\n
comment14.params=
comment14.target=boolean\ foundAllTreasures()
comment15.params=s
comment15.target=void\ lookAround(Square)
comment16.params=
comment16.target=void\ resetInView()
comment17.params=filename
comment17.target=void\ writeMazeToFile(java.lang.String)
comment18.params=fileName
comment18.target=void\ readMazeFromFile(java.lang.String)
comment2.params=row\ col
comment2.target=Square\ getSquare(int,\ int)
comment3.params=
comment3.target=int\ rows()
comment4.params=
comment4.target=int\ cols()
comment5.params=
comment5.target=java.lang.String\ explorerName()
comment6.params=
comment6.target=Explorer\ getExplorer()
comment7.params=index
comment7.target=RandomOccupant\ getRandomOccupant(int)
comment8.params=
comment8.target=int\ getNumRandOccupants()
comment9.params=ro
comment9.target=void\ addRandomOccupant(RandomOccupant)
numComments=19
